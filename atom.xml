<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jose&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhouyanjun.github.io/"/>
  <updated>2017-07-31T05:45:55.000Z</updated>
  <id>http://zhouyanjun.github.io/</id>
  
  <author>
    <name>Jose</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于UnsupportedOperationException异常</title>
    <link href="http://zhouyanjun.github.io/2017/07/31/%E5%85%B3%E4%BA%8EUnsupportedOperationException%E5%BC%82%E5%B8%B8/"/>
    <id>http://zhouyanjun.github.io/2017/07/31/关于UnsupportedOperationException异常/</id>
    <published>2017-07-31T05:42:20.000Z</published>
    <updated>2017-07-31T05:45:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>在遍历Collection时，若想对其进行删除操作，必须使用Iterator中的remove()方法，若使用Collection自带的remove()方法，则会产生<strong>currentModifierException</strong>,在下面这段代码中，会出现<strong>UnsupportedOperationException</strong>异常，Java中提供了这个方法，为什么还会抛出异常呢？<br><a id="more"></a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Integer[] array = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</div><div class="line">        List&lt;Integer&gt; list1 = Arrays.asList(array);</div><div class="line">        Iterator&lt;Integer&gt; iterator1 = list1.iterator();</div><div class="line">        <span class="keyword">while</span> (iterator1.hasNext())&#123;</div><div class="line">            <span class="keyword">int</span> x = iterator1.next();</div><div class="line">            <span class="keyword">if</span>(x==<span class="number">5</span>)&#123;</div><div class="line">                iterator1.remove();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        System.out.println(list1);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>Exception in thread “main” java.lang.UnsupportedOperationException<br>    at java.util.AbstractList.add(AbstractList.java:148)<br>    at java.util.AbstractList.add(AbstractList.java:108)<br>    at java.util.AbstractCollection.addAll(AbstractCollection.java:344)<br>    at Test.main(Test.java:10)<br>    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    at java.lang.reflect.Method.invoke(Method.java:498)<br>    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)</p>
</blockquote>
<p>我们可以观察到其主要问题出现在代码的第9行也就是删除操作。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">   <span class="meta">@SafeVarargs</span></div><div class="line">   <span class="meta">@SuppressWarnings</span>(<span class="string">"varargs"</span>)</div><div class="line">   <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">asList</span><span class="params">(T... a)</span> </span>&#123;</div><div class="line">       <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;(a);</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="comment">/**</span></div><div class="line">    * <span class="doctag">@serial</span> include</div><div class="line">    */</div><div class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractList</span>&lt;<span class="title">E</span>&gt;</span></div><div class="line">       <span class="keyword">implements</span> <span class="title">RandomAccess</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span></div><div class="line">   &#123;</div><div class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2764017481108945198L</span>;</div><div class="line">       <span class="keyword">private</span> <span class="keyword">final</span> E[] a;</div><div class="line"></div><div class="line">       ArrayList(E[] array) &#123;</div><div class="line">           a = Objects.requireNonNull(array);</div><div class="line">       &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>Arrays.asList(T...a)</code>返回的是一个内部类的<code>ArrayList&lt;&gt;(a)</code>;而不是<strong>List</strong>的子类<strong>ArrayList</strong>；而且其保存的是一个<strong>final</strong>对象，所以不能对其进行删除操作。当我们采用另一种将数组变成<strong>List</strong>对象时才可以使用<strong>Iterator</strong>的<strong>remove()</strong>方法去删除元素。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Integer[] array = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</div><div class="line">        List&lt;Integer&gt; list2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        list2.addAll(Arrays.asList(array));</div><div class="line">        Iterator&lt;Integer&gt; iterator2 = list2.iterator();</div><div class="line">        <span class="keyword">while</span> (iterator2.hasNext())&#123;</div><div class="line">            <span class="keyword">int</span> x = iterator2.next();</div><div class="line">            <span class="keyword">if</span>(x==<span class="number">5</span>)&#123;</div><div class="line">                iterator2.remove();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        System.out.println(list2);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在遍历Collection时，若想对其进行删除操作，必须使用Iterator中的remove()方法，若使用Collection自带的remove()方法，则会产生&lt;strong&gt;currentModifierException&lt;/strong&gt;,在下面这段代码中，会出现&lt;strong&gt;UnsupportedOperationException&lt;/strong&gt;异常，Java中提供了这个方法，为什么还会抛出异常呢？&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="http://zhouyanjun.github.io/categories/Java/"/>
    
    
      <category term="UnsupportedOperationException" scheme="http://zhouyanjun.github.io/tags/UnsupportedOperationException/"/>
    
      <category term="Collection" scheme="http://zhouyanjun.github.io/tags/Collection/"/>
    
      <category term="Arrays" scheme="http://zhouyanjun.github.io/tags/Arrays/"/>
    
  </entry>
  
  <entry>
    <title>再见2016</title>
    <link href="http://zhouyanjun.github.io/2016/12/31/%E5%86%8D%E8%A7%812016/"/>
    <id>http://zhouyanjun.github.io/2016/12/31/再见2016/</id>
    <published>2016-12-31T11:56:41.000Z</published>
    <updated>2016-12-31T12:17:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实对于我这种懒人并没有给自己写总结的习惯，但是今年对我来说又有着特殊意义的一年，如果说2015对我来说只有考研这一件事，2016应该是我人生的一个转折点。<br><a id="more"></a></p>
<h3 id="January"><a href="#January" class="headerlink" title="January"></a>January</h3><p>本来觉得刚考完研就被学校拖出来实习是一件很苦逼的事情，但是感谢你们，狼人杀小分队，让我们在动漫基地的过的有声有色。</p>
<h3 id="February"><a href="#February" class="headerlink" title="February"></a>February</h3><p>新年的喜悦，和等待成绩的煎熬，总归没有辜负自己2015年一年的努力，顺利的通过了初试。</p>
<h3 id="March"><a href="#March" class="headerlink" title="March"></a>March</h3><p>复试+足协杯，喜忧参半，复试成功，但是我却输掉了半决赛，卫冕失败，想最后用一个冠军来告别我本科的足球生涯，但是生活就是这样，不会都如你意。</p>
<h3 id="April"><a href="#April" class="headerlink" title="April"></a>April</h3><p>我真的想不起来我四月干了什么。论文，毕业设计？</p>
<h3 id="May"><a href="#May" class="headerlink" title="May"></a>May</h3><p>毕业季，喝酒，喝酒，还是喝酒。告别自己的大学生涯，感谢大学四年遇到你们，院队，校队，骑行社，6栋125，12网工。</p>
<h3 id="June"><a href="#June" class="headerlink" title="June"></a>June</h3><p>欧洲杯，球迷的狂欢，加上收到了录取通知书，整个这个月都是high到不行。</p>
<h3 id="July"><a href="#July" class="headerlink" title="July"></a>July</h3><p>拿到了自己的毕业证学位证，大家真的是要各奔前程。恭喜葡萄牙夺冠，小组第三出线，常规时间只赢过一场球，但这又何妨，天道酬勤。</p>
<h3 id="August"><a href="#August" class="headerlink" title="August"></a>August</h3><p>杭州，西塘，说走就走，亦可赛艇的夜晚，不可描述的老司机。</p>
<h3 id="September"><a href="#September" class="headerlink" title="September"></a>September</h3><p>研究生入学，第一次来苏州，迎接新的挑战。</p>
<h3 id="October"><a href="#October" class="headerlink" title="October"></a>October</h3><p>渐渐习惯了研究生的生活，认识了更多的朋友，长了更多的见识。壮士仍需努力啊。</p>
<h3 id="November"><a href="#November" class="headerlink" title="November"></a>November</h3><p>灰色，祝你幸福。</p>
<h3 id="December"><a href="#December" class="headerlink" title="December"></a>December</h3><p>坎坷的十二月，各种事情蜂拥而至，索性也都熬过去了，确定了自己研究生下一阶段的目标。</p>
<h3 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h3><p>希望自己可以找到一个好的实习，身体健康，一切都顺利。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实对于我这种懒人并没有给自己写总结的习惯，但是今年对我来说又有着特殊意义的一年，如果说2015对我来说只有考研这一件事，2016应该是我人生的一个转折点。&lt;br&gt;
    
    </summary>
    
      <category term="life" scheme="http://zhouyanjun.github.io/categories/life/"/>
    
    
      <category term="life" scheme="http://zhouyanjun.github.io/tags/life/"/>
    
  </entry>
  
</feed>
